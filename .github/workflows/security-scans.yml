name: Security Scans
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  zap-scan:
    runs-on: ubuntu-latest
    services:
      webapp:
        image: node:18  # Remplacez par votre image d'application
        ports:
          - "3000:3000"
        env:
          NODE_ENV: production
        # Optionnel : commande pour démarrer votre app
        options: >-
          --health-cmd "curl -f http://localhost:3000 || exit 1"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4

      - name: Wait for app
        run: |
          for i in {1..10}; do
            if curl -s http://localhost:3000 >/dev/null; then
              echo "App is ready!"
              exit 0
            fi
            sleep 5
          done
          echo "App failed to start"
          exit 1

      - name: ZAP Scan
        uses: zaproxy/action-baseline@v0.10.0
        with:
          target: 'http://localhost:3000'
          rules_file_name: '.zap/rules.tsv'
          cmd_options: '-t 60 -m 120'  # Timeout augmenté
          docker_network: 'bridge'

      - name: Upload ZAP Report
        uses: actions/upload-artifact@v4  # Version mise à jour
        with:
          name: zap-security-report
          path: |
            zap-report.html
            zap-report.json
          retention-days: 3

  nikto-scan:
    needs: zap-scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Nikto Scan
        run: |
          docker run --rm \
            -v "$(pwd):/tmp" \
            sullo/nikto \
            -h http://localhost:3000 \
            -o /tmp/nikto-report.html \
            -Format htm
        continue-on-error: true

      - name: Upload Nikto Report
        uses: actions/upload-artifact@v4
        with:
          name: nikto-security-report
          path: nikto-report.html
          compression-level: 9